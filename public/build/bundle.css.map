{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Answer.svelte",
    "Filters.svelte",
    "History.svelte",
    "MultiQuizz.svelte",
    "Nav.svelte",
    "Quizz.svelte",
    "Score.svelte",
    "SlideText.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Kana from \"./pages/Kana.svelte\";\n    import Vocabulary from \"./pages/Vocabulary.svelte\";\n    import Numbers from \"./pages/Numbers.svelte\";\n\n    import Nav from \"./components/Nav.svelte\";\n\n    let type = \"kana\";\n\n    const pages = {\n        kana: { page: Kana, name: \"Kana\" },\n        vocabulary: { page: Vocabulary, name: \"Vocabulary\" },\n        numbers: { page: Numbers, name: \"Les Nombres\" },\n    };\n\n    const handleChange = ({ detail }) => {\n        type = detail.link;\n    };\n\n    $: page = pages[type].page;\n\n    $: links = Object.keys(pages).map(link => {\n        const name = pages[link].name;\n        return { link, name }\n    });\n</script>\n\n<Nav\n    {links}\n    currentLink={type}\n    on:change={handleChange}\n/>\n{#if page}\n<svelte:component this={page} />\n{/if}\n<div class=\"youtube\">\n    <a class=\"youtube__link\" target=\"_blank\" href=\"https://www.youtube.com/channel/UChFfLNTK64xQj7NscGmLLLg\">\n        Julien Fontanier\n    </a>\n</div>\n\n<style lang=\"scss\">.youtube {\n  position: fixed;\n  bottom: 1em;\n  right: 1em; }\n  .youtube__link {\n    box-sizing: border-box;\n    display: block;\n    text-decoration: none;\n    padding: 1em 2em;\n    border-radius: 2em;\n    background-color: #ff3e00;\n    color: white; }\n</style>",
    "<script>\n    import { slide } from \"svelte/transition\";\n    import SlideText from \"./SlideText.svelte\";\n\n    export let answer;\n    export let animate = true;\n</script>\n\n{#if answer}\n    <SlideText shouldSlide={animate}>\n        {#if answer.isCorrect}\n        {answer.word} ✔\n        {:else}\n        <span>『{answer.answer}』</span>{answer.word} ≠ {answer.userInput} ❌\n        {/if}\n        {#if answer.meaning}『{answer.meaning}』{/if}\n    </SlideText>\n{:else}\n    <h1 out:slide>Your previous answers are displayed here.</h1>\n{/if}\n\n<style lang=\"scss\">h1 {\n  text-align: center; }\n\nspan {\n  color: green; }\n</style>",
    "<script>\n    import { slide } from \"svelte/transition\";\n    import { createEventDispatcher, onMount } from \"svelte\";\n\n    export let choicesObject = {};\n\n    const dispatch = createEventDispatcher();\n    const possibilities = Object.keys(choicesObject);\n\n    let showFilters = false;\n    let choices = possibilities.map((choice, i) => ({\n        choice, selected: i === 0\n    }));\n\n    const handleClick = index => () => {\n        const activeCount = choices.filter(choice => choice.selected).length;\n        const choice = choices[index];\n        if (activeCount <= 1 && choice.selected === true)\n            return\n\n        choice.selected = !choice.selected;\n        choices = choices;\n    };\n\n    $: {\n        const selectedChoices = choices.filter(({ selected }) => selected);\n        const mappedChoices = selectedChoices.map(({ choice }) => choice)\n        dispatch(\"change\", mappedChoices);\n    }\n\n    onMount(() => {\n        choices = choices;\n    });\n</script>\n\n<div class=\"filters\">\n    <button class=\"filters__btn\" on:click={() => showFilters = !showFilters}>Show Filters</button>\n    {#if showFilters}\n    <ul transition:slide class=\"filters__items\">\n        {#each choices as { choice, selected }, index}\n        <li\n            class=\"filters__item\"\n            class:-selected={selected}\n            on:click={handleClick(index)}\n        >\n            {choice}\n        </li>\n        {/each}\n    </ul>\n    {/if}\n</div>\n\n<style lang=\"scss\">.filters {\n  position: fixed;\n  top: 1em;\n  left: 1em; }\n  .filters__items {\n    padding: 1.5em;\n    border-radius: .5em;\n    box-shadow: 0 0.5em 1.5em rgba(0, 0, 0, 0.15);\n    background-color: white; }\n  .filters__item {\n    cursor: pointer;\n    user-select: none;\n    background-color: rgba(255, 165, 0, 0.25);\n    border: .15em solid transparent;\n    padding: .25em 1em;\n    border-radius: .25em;\n    transform-origin: center left;\n    transition-duration: 200ms;\n    transition-property: background-color border-color transform color; }\n    .filters__item:not(:last-child) {\n      margin-bottom: .5em; }\n    .filters__item:hover {\n      background-color: transparent;\n      border-color: #ff3e00;\n      transform: scale(1.05); }\n    .filters__item:active {\n      transform: scale(1); }\n    .filters__item.-selected {\n      background-color: #ff3e00;\n      color: white; }\n</style>",
    "<script>\n    import { slide } from \"svelte/transition\";\n    import Answer from \"./Answer.svelte\";\n\n    export let data;\n\n    let hidden = true;\n\n    $: [lastAnswer, ...rest] = data;\n</script>\n\n<Answer answer={lastAnswer} />\n{#if data.length > 1}\n<button transition:slide on:click={() => hidden = !hidden}>\n    {hidden\n        ? \"詳細「しょうさい」\"\n        : \"隠す「かくす」\"}\n</button>\n{/if}\n{#if !hidden}\n{#each rest as answer}\n<Answer answer={answer} />\n{/each}\n{/if}\n\n<style lang=\"scss\">button {\n  cursor: pointer;\n  color: #ff3e00;\n  border: 2px solid currentColor;\n  background: none;\n  padding: .5em 2em;\n  margin-top: 2em; }\n</style>",
    "<script>\nimport History from \"./History.svelte\";\nimport Quizz from \"./Quizz.svelte\";\n\nimport Score from \"./Score.svelte\";\n\n\n    export let characters = [];\n    export let shouldFilter = true;\n    export let heading = undefined;\n\n    let failCount = 0;\n    let winCount = 0;\n    let answers = [];\n    let isRandom = true;\n    let currentIndex = 0;\n\n    const getRandomCharacter = () => {\n        const randomNumber = Math.random() * (characters.length - 1);\n        const randomIndex = Math.round(randomNumber);\n\n        return characters[randomIndex];\n    };\n\n    const handleAnswer = ({ detail }) => {\n        const { isCorrect } = detail;\n\n        if (isCorrect)\n            winCount++;\n        else\n            failCount++;\n        \n        if (answers.length > 9)\n            answers.pop();\n\n        answers = [detail, ...answers];\n\n        if (!isRandom) {\n            const lastIndex = characters.length - 1;\n            if (++currentIndex > lastIndex)\n                currentIndex = 0;\n            \n            current = characters[currentIndex];\n        } else\n            current = getRandomCharacter();\n    };\n\n    const handleReset = () => {\n        winCount = 0;\n        failCount = 0;\n        answers = [];\n    };\n\n    const handleMode = () => {\n        isRandom = !isRandom;\n\n        if (!isRandom) {\n            currentIndex = 0;\n            current = characters[currentIndex];\n        } else {\n            current = getRandomCharacter();\n        }\n    };\n\n    let current = getRandomCharacter();\n</script>\n\n<button on:click={handleMode}>mode \"{isRandom ? \"Random\" : \"In Order\"}\"</button>\n<Score {winCount} {failCount} on:reset={handleReset}/>\n<Quizz\n    on:answer={handleAnswer}\n\n    {...current}\n    {heading}\n    {shouldFilter}\n/>\n<History data={answers} />\n\n<style lang=\"scss\">button {\n  position: fixed;\n  bottom: 1em; }\n</style>",
    "<script>\n    import { slide } from \"svelte/transition\";\n    import { createEventDispatcher } from \"svelte\";\n\n    export let currentLink;\n    export let links = [];\n\n    const dispatch = createEventDispatcher();\n\n    const handleClick = link => () => {\n        isVisible = false;\n        dispatch(\"change\", { link });\n    };\n\n    $: filteredLinks = links.filter(({ link }) => link !== currentLink);\n\n    let isVisible = false;\n</script>\n\n<nav class=\"nav\">\n    <button class=\"nav__button\" on:click={() => isVisible = !isVisible}>\n        {isVisible ? \"Close\" : \"Menu\"}\n    </button>\n{#if isVisible}\n    <ul transition:slide class=\"nav__links\">\n        {#each filteredLinks as { name, link }}\n        <li class=\"nav__link\" on:click={handleClick(link)}>{name}</li>\n        {/each}\n    </ul>\n{/if}\n</nav>\n\n<style lang=\"scss\">.nav {\n  position: fixed;\n  top: 1em;\n  right: 1em; }\n  .nav__button {\n    position: absolute;\n    top: 0;\n    right: 0; }\n  .nav__links {\n    position: absolute;\n    top: 3em;\n    right: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    background-color: white;\n    box-shadow: 0 0.25em 1em rgba(255, 165, 0, 0.25);\n    padding: 1em;\n    border-radius: 1em; }\n  .nav__link {\n    cursor: pointer;\n    padding: .25em 1em;\n    background-color: rgba(255, 165, 0, 0.25);\n    border: .15em solid transparent;\n    border-radius: .5em;\n    transform-origin: center right;\n    transition-duration: 200ms;\n    transition-property: border-color background-color transform; }\n    .nav__link:hover {\n      border-color: currentColor;\n      background-color: transparent;\n      transform: scale(1.05); }\n    .nav__link:active {\n      transform: scale(1); }\n    .nav__link:not(:last-child) {\n      margin-bottom: .5em; }\n</style>",
    "<script>\n    import { createEventDispatcher } from \"svelte\";\n    import { scale } from \"svelte/transition\";\n\n    const dispatch = createEventDispatcher();\n\n    export let heading = \"ひらがな\";\n    export let shouldFilter = true;\n    export let word;\n    export let answer;\n    export let meaning = undefined;\n\n    let userInput = \"\";\n    let showHint = false;\n    let input = null;\n\n    const handleSubmit = () => {\n        if (!userInput) return;\n\n        const result = { userInput, word, answer, meaning };\n\n        if (answer instanceof Array)\n            result.isCorrect = answer.includes(userInput);\n        else\n            result.isCorrect = userInput === answer;\n\n        dispatch(\"answer\", result);\n        userInput = \"\";\n        showHint = false;\n    };\n\n    const handleChange = e => {\n        userInput = e.target.value.trim();\n\n        if (shouldFilter)\n            userInput = userInput.replace(/[^A-Za-z]/g, \"\");\n    };\n\n    const handleShowHint = () => showHint = !showHint;\n\n    $: {\n        if (input && showHint === false)\n            input.focus();\n    }\n</script>\n{#if showHint}\n<div transition:scale class=\"quizz__hint\">\n    {#if answer instanceof Array}\n    <ul>\n        {#each answer as answerItem}\n            <li><h1>\b• {answerItem}</h1></li>\n        {/each}\n    </ul>\n    {:else}\n    <h1>{answer}</h1>\n    {/if}\n</div>\n{/if}\n<h1 class=\"quizz__heading\">{heading}</h1>\n<article class=\"quizz\">\n    <h2 class=\"quizz__kana\" on:click={handleShowHint}>{word || \"°\"}</h2>\n    <form class=\"quizz__form\" on:submit|preventDefault={handleSubmit}>\n        <input bind:this={input} class=\"quizz__input\" type=\"text\" value={userInput} on:input={handleChange}>\n        <button class=\"quizz__button\" type=\"submit\">次「つぎ」</button>\n    </form>\n</article>\n\n<style lang=\"scss\">.quizz {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: .5em solid currentColor;\n  border-radius: 1em;\n  margin: 2em 0;\n  padding: 2em 15vw; }\n  .quizz__hint {\n    position: fixed;\n    top: 2em;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: white;\n    padding: 1em 2em;\n    border-radius: .5em;\n    box-shadow: 0 0.5em 1em rgba(0, 0, 0, 0.15); }\n  .quizz__heading {\n    font-size: 3em;\n    text-align: center; }\n  .quizz__kana {\n    cursor: pointer;\n    font-size: 6em;\n    user-select: none;\n    text-align: center;\n    transition: transform 200ms; }\n    .quizz__kana:hover {\n      transform: scale(1.1); }\n    .quizz__kana:active {\n      transform: scale(0.9); }\n  .quizz__form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 1em; }\n  .quizz__button {\n    border: none;\n    background-color: #ff3e00;\n    color: white;\n    width: 100%;\n    padding: .5em; }\n</style>",
    "<script>\nimport { createEventDispatcher } from \"svelte\";\n\n    export let winCount = 0;\n    export let failCount = 0;\n\n    const dispatch = createEventDispatcher();\n\n    const handleReset = () => dispatch(\"reset\");\n</script>\n\n<h1 on:click={handleReset} class=\"answers\">\n    <span class=\"answers__correct\">{winCount}</span>\n    - \n    <span class=\"answers__incorrect\">{failCount}</span>\n</h1>\n\n<style lang=\"scss\">.answers {\n  cursor: pointer;\n  font-weight: 800;\n  user-select: none;\n  transition: transform 200ms; }\n  .answers__correct {\n    color: green; }\n  .answers__incorrect {\n    color: red; }\n  .answers:hover {\n    transform: scale(1.1); }\n  .answers:active {\n    transform: scale(0.9); }\n</style>",
    "<script>\n    import { slide } from \"svelte/transition\";\n\n    export let shouldSlide = true;\n</script>\n\n{#if shouldSlide}\n<h1 transition:slide><slot/></h1>\n{:else}\n<h1><slot/></h1>\n{/if}\n\n<style lang=\"scss\">h1 {\n  text-align: center; }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}